/*
 * Client Portal Web API
 *
 * Client Portal Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct HistoryResultBars {
    #[serde(rename = "open", skip_serializing_if = "Option::is_none")]
    pub open: Option<f32>,
    #[serde(rename = "high", skip_serializing_if = "Option::is_none")]
    pub high: Option<f32>,
    #[serde(rename = "low", skip_serializing_if = "Option::is_none")]
    pub low: Option<f32>,
    #[serde(rename = "close", skip_serializing_if = "Option::is_none")]
    pub close: Option<f32>,
    #[serde(rename = "volume", skip_serializing_if = "Option::is_none")]
    pub volume: Option<f32>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<String>,
    #[serde(rename = "endTime", skip_serializing_if = "Option::is_none")]
    pub end_time: Option<String>,
    #[serde(rename = "weightedAvg", skip_serializing_if = "Option::is_none")]
    pub weighted_avg: Option<f32>,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<f32>,
}

impl HistoryResultBars {
    pub fn new() -> HistoryResultBars {
        HistoryResultBars {
            open: None,
            high: None,
            low: None,
            close: None,
            volume: None,
            time: None,
            end_time: None,
            weighted_avg: None,
            count: None,
        }
    }
}


